name: Java CI/CD with Spring Boot and PostgreSQL

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give permission to Maven Wrapper
        run: chmod +x mvnw

      - name: Build project
        run: ./mvnw clean compile

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: gym_prod
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 230218
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give permission to Maven Wrapper
        run: chmod +x mvnw

      - name: Run tests with prod profile
        run: ./mvnw test -Dspring.profiles.active=prod

  docker-build:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make Maven Wrapper executable
        run: chmod +x mvnw

      - name: Build JAR file
        run: ./mvnw package -DskipTests

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: gratilovakatrin/my-spring-app:latest

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Trigger deploy on Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d0vlv3ripnbc73824l0g" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json"
